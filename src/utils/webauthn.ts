import {
    CredentialRequestOptionsJSON,
    CredentialCreationOptionsJSON,
} from "@github/webauthn-json/browser-ponyfill";

export const getKeyCredentialCreationOptions = (
    challenge: string,
    currentDomain: string,
    username: string,
    userId: string
): CredentialCreationOptionsJSON => ({
    publicKey: {
        // @DEV: the challenge is passed by the server and need to be returned to the server
        // at the end of the registration process for verification
        challenge,
        rp: {
            name: "Ledger",
            id: currentDomain,
        },
        // @DEV: the id must be passed by the server, it would be hashed and the output would
        // be stored in the returned certificate
        user: {
            id: userId,
            name: username,
            displayName: username,
        },
        pubKeyCredParams: [{ alg: -7, type: "public-key" }, { alg: -257, type: "public-key" }],
        timeout: 60000,
        // @DEV: 'indirect' means the certificate generated by the authenticator would be anonymised
        attestation: "indirect",
    },
});

export const getRequestOptions = (challenge, id): CredentialRequestOptionsJSON => ({
    publicKey: {
        allowCredentials: [{ id, type: "public-key" }],
        timeout: 60000,
        challenge,
        // @DEV: https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/User_Presence_vs_User_Verification.html
        userVerification: "discouraged"
    },
});
